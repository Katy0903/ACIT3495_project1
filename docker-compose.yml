
services:
  # Web App Container
  web-app:
    build: ./web-app
    ports:
      - "8080:8080"         # Exposes the web app on port 8080
    environment:
      MYSQL_HOST: mysql     # Environment variables to connect with MySQL
      MYSQL_USER: root
      MYSQL_PASSWORD: rootpassword
      MYSQL_DB: video_db
    volumes:
      # - ./web-app:/app
      - video_storage:/storage
    networks:
      - video-net
    depends_on:
      mysql:
        condition: service_healthy
      storage:
        condition: service_started


  # MySQL Container
  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: video_db
    volumes:
      - video_mysql:/var/lib/mysql  # Changed volume name to video_mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql   # Initialize database with SQL script
    networks:
      - video-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      retries: 5
      start_period: 10s
      timeout: 5s


  # File Storage Container
  storage:
    image: alpine
    command: tail -f /dev/null  
    volumes:
      - video_storage:/storage
    networks:
      - video-net

networks:
  video-net:
    driver: bridge



volumes:
  # web-app:
  video_mysql: 
  video_storage:



